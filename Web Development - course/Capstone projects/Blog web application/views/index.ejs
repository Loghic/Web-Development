<%- include("partials/header.ejs") %>


<h1>Welcome to the blog website!</h1>

<div class="myForm">
    <h2>Create a new post</h2>
    <form action="/submit" method="POST">
    <input type="text" name="postName" placeholder="Post name"><br>
    <textarea name="postData" wrap="soft" placeholder="Post Message" maxlength="40"></textarea><br>
    <div class="submitBtns">
        <input type="submit" value="Post" id="submitBtn">
        <div class="btnDelete">
            <button onclick="deletePosts()">Delete all posts</button>
        </div>
    </div>
    </form>
</div>

<script>
    async function deletePosts() {
        console.log("DELETING");

        try {
        const response = await fetch('/deletePosts', {
            method: 'DELETE'
        });

        if (response.ok) {
            console.log("All posts deleted");
            window.location.href = '/';
        } else {
            console.error("Failed to delete posts");
        }
        } catch (error) {
            console.error("Error:", error);
        }
    }
</script>


<script>
    async function savePost(index) {
        console.log("saving post");

        const updatedName = document.getElementById(`nameInput-${index}`).value;
        const updatedMessage = document.getElementById(`messageInput-${index}`).value;

        const updatedData = {
            name: updatedName,
            message: updatedMessage
        };

        try {
            const response = await fetch(`/updatePost/${index}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedData) 
            });

            if (response.ok) {
                console.log("Post was updated successfully");

                // this updates the whole page and is reloading the whole page
                // window.location.href = '/';  


                // this is only updating and reloding 1 element (post)
                document.getElementById(`postName-${index}`).innerText = updatedName;
                document.getElementById(`postMessage-${index}`).innerText = updatedMessage;

                document.getElementById(`displayMode-${index}`).style.display = "block";
                document.getElementById(`editMode-${index}`).style.display = "none";
                document.getElementById(`editBtn-${index}`).style.display = "inline-block";
                document.getElementById(`saveBtn-${index}`).style.display = "none";
                document.getElementById(`deleteBtn-${index}`).style.display = "inline-block";
                document.getElementById(`cancelBtn-${index}`).style.display = "none";
            } else {
                console.error("Failed to update post");
            }
        } catch (error) {
            console.error("Error:", error);
        }
    }

    async function deletePost(index) {
        console.log("Deleting post");
        try {
        const response = await fetch(`/deletePost/${index}`, {
            method: 'DELETE'
        });

        if (response.ok) {
            console.log("A post was deleted");

            // updates the whole page
            // window.location.href = '/'; 

            // updates only that the post has been deleted
            const postElement = document.getElementById(`post-${index}`);
            if (postElement){
                postElement.remove();
                updatePostIndexes(index);
            }

            
        } else {
            console.error("Failed to delete post");
        }
        } catch (error) {
            console.error("Error:", error);
        }
    }

    let originalPostContent = {};

    function toggleEditMode(index) {
        const postName = document.getElementById(`postName-${index}`).textContent;
        const postMessage = document.getElementById(`postMessage-${index}`).textContent;

        originalPostContent[index] = {
            name: postName,
            message: postMessage
        };

        const displayMode = document.getElementById(`displayMode-${index}`);
        const editMode = document.getElementById(`editMode-${index}`);
        const editBtn = document.getElementById(`editBtn-${index}`);
        const saveBtn = document.getElementById(`saveBtn-${index}`);
        const cancelBtn = document.getElementById(`cancelBtn-${index}`);
        const deleteBtn = document.getElementById(`deleteBtn-${index}`);

        // Toggle display and edit modes
        displayMode.style.display = "none";
        editMode.style.display = "block";
        editBtn.style.display = "none"; 
        deleteBtn.style.display = "none";
        saveBtn.style.display = "inline-block"; 
        cancelBtn.style.display = "inline-block";
    }

    function disableEditMode(index) {
        const originalContent = originalPostContent[index];

        if (originalContent) {
            document.getElementById(`postName-${index}`).textContent = originalContent.name;
            document.getElementById(`postMessage-${index}`).textContent = originalContent.message;

            document.getElementById(`nameInput-${index}`).value = originalContent.name;
            document.getElementById(`messageInput-${index}`).value = originalContent.message;
        }

        const displayMode = document.getElementById(`displayMode-${index}`);
        const editMode = document.getElementById(`editMode-${index}`);
        const editBtn = document.getElementById(`editBtn-${index}`);
        const saveBtn = document.getElementById(`saveBtn-${index}`);
        const cancelBtn = document.getElementById(`cancelBtn-${index}`);
        const deleteBtn = document.getElementById(`deleteBtn-${index}`);

        // Toggle display and edit modes off
        displayMode.style.display = "block";
        editMode.style.display = "none";
        saveBtn.style.display = "none"; 
        cancelBtn.style.display = "none";
        editBtn.style.display = "inline-block"; 
        deleteBtn.style.display = "inline-block";
    }

    function updatePostIndexes(deletedIndex) {
        // Get all post elements
        const posts = document.querySelectorAll('[id^="post-"]');
        console.log(posts);

        posts.forEach(post => {
            const postId = post.id;
            const currentIndex = parseInt(postId.split('-')[1], 10);

            // Only update posts with an index greater than the deleted one
            if (currentIndex > deletedIndex) {
                const newIndex = currentIndex - 1;
                post.id = `post-${newIndex}`;

                // Update all related elements' IDs
                document.getElementById(`displayMode-${currentIndex}`).id = `displayMode-${newIndex}`;
                document.getElementById(`editMode-${currentIndex}`).id = `editMode-${newIndex}`;
                document.getElementById(`postName-${currentIndex}`).id = `postName-${newIndex}`;
                document.getElementById(`postMessage-${currentIndex}`).id = `postMessage-${newIndex}`;
                document.getElementById(`nameInput-${currentIndex}`).id = `nameInput-${newIndex}`;
                document.getElementById(`messageInput-${currentIndex}`).id = `messageInput-${newIndex}`;

                // Update the buttons' IDs and onclick functions
                document.getElementById(`editBtn-${currentIndex}`).id = `editBtn-${newIndex}`;
                document.getElementById(`editBtn-${newIndex}`).setAttribute("onclick", `toggleEditMode(${newIndex})`);

                document.getElementById(`saveBtn-${currentIndex}`).id = `saveBtn-${newIndex}`;
                document.getElementById(`saveBtn-${newIndex}`).setAttribute("onclick", `savePost(${newIndex})`);

                document.getElementById(`cancelBtn-${currentIndex}`).id = `cancelBtn-${newIndex}`;
                document.getElementById(`cancelBtn-${newIndex}`).setAttribute("onclick", `disableEditMode(${newIndex})`);

                document.getElementById(`deleteBtn-${currentIndex}`).id = `deleteBtn-${newIndex}`;
                document.getElementById(`deleteBtn-${newIndex}`).setAttribute("onclick", `deletePost(${newIndex})`);
            }
    });
}
</script>

<% if (locals.allPosts && allPosts.length > 0){ %>
    <div class="postTable">
    <% allPosts.forEach((onePost, index) => { %>
        <div class="onePost" id="post-<%= index %>">

            <div id="displayMode-<%= index %>">
                <h3 id="postName-<%= index %>"><%= onePost.name %></h1>
                <p id="postMessage-<%= index %>"><%= onePost.message %></p>
            </div>

            <div id="editMode-<%= index %>" style="display: none;">
                <label>Post name</label>
                <input type="text" id="nameInput-<%= index %>" value="<%= onePost.name %>" />
                <textarea id="messageInput-<%= index %>" maxlength="40"><%= onePost.message %></textarea>
            </div>

            <div class="updtActionBtns">
                <button id="editBtn-<%= index %>" onclick="toggleEditMode('<%= index %>')">Edit</button>
                <button id="saveBtn-<%= index %>" style="display: none;" onclick="savePost('<%= index %>')">Save</button>
                <button id="cancelBtn-<%= index %>" style="display: none;" onclick="disableEditMode('<%= index %>')">Cancel</button>
                <button id="deleteBtn-<%= index %>" onclick="deletePost('<%= index %>')">Delete</button> 
            </div>
        </div>
    <% }); %>
    </div>
<% }else{ %>
    <h3>No messages yet!</h3>
    <% console.log("Variable 'allPosts' does not exist") %>
<% } %>



<%- include("partials/footer.ejs") %>